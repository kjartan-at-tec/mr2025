#+OPTIONS: toc:nil
# #+LaTeX_CLASS: koma-article 

#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation,aspectratio=169]
#+OPTIONS: H:2
# #+BEAMER_THEME: Madrid
#+COLUMNS: %45ITEM %10BEAMER_ENV(Env) %10BEAMER_ACT(Act) %4BEAMER_COL(Col) %8BEAMER_OPT(Opt)
     
#+LaTex_HEADER: \usepackage{pifont}
#+LaTex_HEADER: \newcommand{\cmark}{\textcolor{green!80!black}{\ding{51}}}

#+LaTex_HEADER: \usepackage{amssymb}
#+LaTex_HEADER: \usepackage{pgfplotstable}
#+LaTex_HEADER: \DeclareMathOperator{\shift}{q}
#+LaTex_HEADER: \DeclareMathOperator{\diff}{p}

#+LaTex_HEADER: \usepackage{khpreamble, euscript, mathtools}
#+LaTex_HEADER: \DeclareMathOperator{\atantwo}{atan2}
#+LaTex_HEADER: \newcommand*{\ctrb}{\EuScript{C}}
#+LaTex_HEADER: \newcommand*{\obsv}{\EuScript{O}}


#+title: State feedback with observer



* Promise                                                          :noexport:
  
  After this lecture you will understand how to design an observer to estimate
  the state of a system, and to use this for feedback control

* State feedback with observer
** State feedback with reconstructed states

** State feedback with reconstructed states
   #+begin_export latex
   \begin{center}
   \includegraphics[width=0.9\linewidth]{../../figures/fig-apollo}
   \end{center}
   #+end_export

** State feedback
   Given
   \begin{equation}
   \begin{split}
    \dot{x} &= A x + B u\\
    y &= C x
   \end{split}
   \label{eq:ssmodel}
  \end{equation}
  and measurements (or estimates) of the state vector \(x\). 

  *Linear state feedback* is the control law
  \begin{equation*}
  \begin{split}
   u &= f\big((x, u_c\big) = -l_1x_1 - l_2x_2 - \cdots - l_n x_n + l_0u_c\\
        &= -\textcolor{morange}{L}x + l_0u_c, 
  \end{split}
  \end{equation*}
  where \[ \textcolor{morange}{L} = \bbm l_1 & l_2 & \cdots & l_n \ebm. \]
  Substituting the control law in the state space model \eqref{eq:ssmodel} gives
   \begin{equation}
   \begin{split}
    \dot{x} &= \left(A -B \textcolor{morange}{L} \right) x + l_0B r\\
    y(k) &= C x
   \end{split}
   \label{eq:closedloop}
  \end{equation}



** Observer design
   Given model
   \begin{equation*}
   \begin{split}
    \dot{x} &= A x + B u\\
    y &= C x
   \end{split}
   \label{eq:ssmodel}
  \end{equation*}
  and measurements of the output signal \(y\). 

  The observer is given by
      \begin{equation*}
      \begin{split}
      \dot{\hat{x}} &= \underbrace{A \hat{x} + B u{}}_{\text{simulation}} + \underbrace{\textcolor{mred}{K}\big(y - C\hat{x}\big)}_{\text{correction}} = \left(A - \textcolor{mred}{K}C\right)\hat{x} +  B u{} + \textcolor{mred}{K}y
      \end{split}
      \end{equation*}
  with poles given by the eigenvalues of the matrix \(A_o = A - \textcolor{mred}{K}C\)

  *Rule-of-thumb* Choose the poles of the observer (eigenvalues of \(A-\textcolor{mred}{K}C\)) at least twice as fast as the poles (eigenvalues) of \(A-B \textcolor{morange}{L}\).


** Control by feedback from reconstructed states
   The design problem can be separated into two problems
   1. Determine the gain vector \(\textcolor{orange!80!black}{L}\) and the gain \(\textcolor{mbluegreen}{l_0}\) of the control law
      \[ u{} = -\textcolor{orange!80!black}{L} \hat{x} + \textcolor{mbluegreen}{l_0} r\]
      so that the closed-loop system has good reference tracking.
   2. Determine the gain vector \(\textcolor{mred}{K}\) of the observer
      \begin{equation*}
      \begin{split}
      \dot{\hat{x}} &= A \hat{x} + B u{} + \textcolor{mred}{K} \big(y - C\hat{x}\big)
      \end{split}
      \end{equation*}
      to get a good balance between disturbance rejection and noise attenuation.

** Computing the observer gain
   A matrix $M$ and its transpose $M\transp$ have the same eigenvalues. Hence, the problem of determining the gain $K$ to obtain desired eigenvalues of 
   \[A- \textcolor{mred}{K}C\] is equivalent to determining the gain $\textcolor{mred}{K}$ in 
   \[(A-\textcolor{mred}{K}C)\transp = A\transp - C\transp \textcolor{mred}{K}\transp.\]
   The last problem has the exact same form as the problem of determining $\textcolor{morange}{L}$ to obtain desired eigenvalues of 
   \[A - B \textcolor{morange}{L}\]
   
   So, the same matlab function can be used for both problems.

** Computing the state feedback and  observer gains
   
  1. *Ackerman's method* 
     #+begin_src octave
	L = acker(A, B, pd)
	K = acker(A, C', po)'
     #+end_src
  1. *More numerically stable method* 
     #+begin_src octave
	L = place(A, B, pd)
	K = place(A, C', po)'
     #+end_src

* Example - DC motor
** Example - Position control of the DC motor

    \begin{center}
      \includegraphics[width=0.8\linewidth]{../../figures/block-DC}
    \end{center}


** State-space model with physical states

*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:

    \begin{center}
      \includegraphics[width=\linewidth]{../../figures/block-DC}
    \end{center}

    State variables corresponding to physical signals:
    \[ x = \begin{bmatrix} x_1\\x_2 \end{bmatrix}= \begin{bmatrix} \omega\\ \theta \end{bmatrix} \]
    With dynamics
    \begin{align*}
    \tau \dot{\omega} &= -\omega + Ku\\
    \dot{\theta} &= \omega
    \end{align*}
*** Text
:PROPERTIES:
:BEAMER_col: 0.4
:END:

#+BEAMER: \pause

   *Activity* Fill the matrix \(A\) and vectors \(B\) and \(C\).

   \[ \dot{x} = \begin{bmatrix} \dot{x}_1\\\dot{x}_2\end{bmatrix} = \underbrace{\begin{bmatrix} \textcolor{white}{-\frac{1}{\tau}} & \textcolor{white}{0} \\\textcolor{white}{1} & \textcolor{white}{0} \end{bmatrix}}_{A} \begin{bmatrix} x_1\\x_2\end{bmatrix} + \underbrace{\begin{bmatrix} \textcolor{white}{\frac{k}{\tau}} \\ \textcolor{white}{0} \end{bmatrix}}_{B} u \]
\[ y = \theta = \underbrace{\begin{bmatrix} \textcolor{white}{0} & \textcolor{white}{1} \end{bmatrix}}_{C} \begin{bmatrix} x_1\\x_2\end{bmatrix} \]





** State-space model with physical states

*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:

    \begin{center}
      \includegraphics[width=\linewidth]{../../figures/block-DC}
    \end{center}

    State variables corresponding to physical signals:
    \[ x = \begin{bmatrix} x_1\\x_2 \end{bmatrix}= \begin{bmatrix} \omega\\ \theta \end{bmatrix} \]
    With dynamics
    \begin{align*}
    \tau \dot{\omega} &= -\omega + ku\\
    \dot{\theta} &= \omega
    \end{align*}
*** Text
:PROPERTIES:
:BEAMER_col: 0.4
:END:

   *Activity* Fill the matrix \(A\) and vectors \(B\) and \(C\).

   \[ \dot{x} = \begin{bmatrix} \dot{x}_1\\\dot{x}_2\end{bmatrix} = \underbrace{\begin{bmatrix} \textcolor{black}{-\frac{1}{\tau}} & \textcolor{black}{0} \\\textcolor{black}{1} & \textcolor{black}{0} \end{bmatrix}}_{A} \begin{bmatrix} x_1\\x_2\end{bmatrix} + \underbrace{\begin{bmatrix} \textcolor{black}{\frac{k}{\tau}} \\ \textcolor{black}{0} \end{bmatrix}}_{B} u \]
\[ y = \theta = \underbrace{\begin{bmatrix} \textcolor{black}{0} & \textcolor{black}{1} \end{bmatrix}}_{C} \begin{bmatrix} x_1\\x_2\end{bmatrix} \]


** State-space model on controllable canonical form
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:

    \begin{center}
      \includegraphics[width=\linewidth]{../../figures/block-DC}
    \end{center}

    Transfer function
    \[G(s) = \frac{ \frac{k}{\tau}} {s( s + \frac{1}{\tau})}\]
*** Text
:PROPERTIES:
:BEAMER_col: 0.6
:END:
The system with transfer function
\begin{equation*}
G(s)=\frac{b_1s^{n-1}+\dots+b_{n-1}s+b_n}{s^n+a_1s^{n-1}+\dots
  +a_{n-1}s+a_n}
\end{equation*}
can be represented on state-space form as
\begin{align*}
\dot{x}&=\bbm -a_1& -a_2& \cdots& -a_{n-1}& -a_n\\
1& 0& \cdots& 0& 0\\
0& 1& \cdots& 0& 0\\
\vdots& \vdots& \ddots& \vdots& \vdots\\
0& 0& \cdots& 1& 0\ebm x+
\bbm 1\\ 0\\ 0\\ \vdots\\ 0\ebm u\\
y&=\bbm b_1& b_2& \cdots& b_n\ebm x
\end{align*}

#+BEAMER: \pause

*Activity* Determine the state-space model of the DC motor on controllable canonical form


** State-space model on observable canonical form
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:

    \begin{center}
      \includegraphics[width=\linewidth]{../../figures/block-DC}
    \end{center}

    Transfer function
    \[G(s) = \frac{ \frac{k}{\tau}} { s(s + \frac{1}{\tau})}\]
*** Text
:PROPERTIES:
:BEAMER_col: 0.6
:END:
The system with transfer function
\begin{equation*}
G(s)=\frac{b_1s^{n-1}+\dots+b_{n-1}s+b_n}{s^n+a_1s^{n-1}+\dots
  +a_{n-1}s+a_n}
\end{equation*}
can be represented on state-space form as
\begin{align*}
\dot{x}&=\bbm -a_1& 1& 0 &\cdots &  0\\
-a_2 & 0& 1 &  \cdots& 0\\
-a_3 & 0 & 0& \cdots & 0\\
\vdots& \vdots& \vdots & \ddots& \vdots\\
-a_n& 0& 0 & \cdots& 0\ebm x+
\bbm b_1\\ b_2\\ b_3\\ \vdots\\ b_n\ebm u\\
y&=\bbm 1& 0& \cdots& 0 \ebm x
\end{align*}

#+BEAMER: \pause

*Activity* Determine the state-space model of the DC motor on observable canonical form

** State-feedback for model with physical states

*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:


   \[ \dot{x} = \begin{bmatrix} \dot{x}_1\\\dot{x}_2\end{bmatrix} = \underbrace{\begin{bmatrix} \textcolor{black}{-\frac{1}{\tau}} & \textcolor{black}{0} \\\textcolor{black}{1} & \textcolor{black}{0} \end{bmatrix}}_{A} \begin{bmatrix} x_1\\x_2\end{bmatrix} + \underbrace{\begin{bmatrix} \textcolor{black}{\frac{K}{\tau}} \\ \textcolor{black}{0} \end{bmatrix}}_{B} u \]

Feedback \( u = -\textcolor{morange}{L}x + \textcolor{mbluegreen}{l_0} r\) gives closed-loop system

\begin{align*}
  \dot{x} &= (A-B\textcolor{morange}{L})x + \textcolor{mbluegreen}{l_0}Br\\
  &= \begin{bmatrix} \textcolor{black}{-\frac{1}{\tau}} -\textcolor{morange}{l_1}\frac{k}{\tau} & - \textcolor{morange}{l_2}\frac{k}{\tau} \\\textcolor{black}{1} & \textcolor{black}{0} \end{bmatrix} x + \textcolor{mbluegreen}{l_0} B r
  \end{align*}
with characteristic polynomial
\[s^2 + (\textcolor{black}{\frac{1}{\tau}}  + \textcolor{morange}{l_1}\frac{k}{\tau})s +  \textcolor{morange}{l_2}\frac{k}{\tau} \]


*** Text
:PROPERTIES:
:BEAMER_col: 0.4
:END:

#+begin_export latex
\begin{center}
  \begin{tikzpicture}[scale=0.7]
  \pgfmathsetmacro{\wc}{2}
  \pgfmathsetmacro{\rp}{\wc*cos(45)}
    \draw[->] (-4,0) to (2,0) node[below] {Re};
    \draw[->] (0,-3) to (0,3) node[left] {Im};

    \draw[dashed, black!80] (0,\wc) arc[radius=\wc{}cm, start angle=90, end angle=270]; 

    \node[anchor=center, red!80!black] at (-\rp, \rp) {\Large $\times$ };
    \node[anchor=center, red!80!black] at (-\rp, -\rp) {\Large $\times$ };

    \draw[thin, <->] (0,0) -- node[above] {$\frac{1}{\tau_c}$} (-\rp, \rp);
    \end{tikzpicture}
\end{center}
#+end_export

Desired closed-loop characteristic polynomial

\begin{align*}
  (s-p_1)(s-p_2) &= s^2 + \frac{\sqrt{2}}{\tau_c}s + \frac{1}{\tau_c^2}
\end{align*}


** State-feedback for model with physical states

Characteristic polynomial obtained with state feedback
\[s^2 + (\textcolor{black}{\frac{1}{\tau}}  + \textcolor{morange}{l_1}\frac{k}{\tau})s +  \textcolor{morange}{l_2}\frac{k}{\tau} \]
Desired characteristic polynomial
\[  s^2 + \frac{\sqrt{2}}{\tau_c}s + \frac{1}{\tau_c^2}\]
#+BEAMER: \pause

*Activity*
Determine the feedback gains!

#+BEAMER: \pause
*Solution*
#+BEAMER: \pause
\begin{align*}
 \textcolor{morange}{l_1} &= \frac{\tau}{k}\big(\frac{\sqrt{2}}{\tau_c} - \frac{1}{\tau}\big) = \frac{\sqrt{2}\tau - \tau_c}{k\tau_c}\\
 \textcolor{morange}{l_2} &= \frac{\tau}{k\tau_c^2} 
\end{align*}

*** Notes                                                          :noexport:

Dimensional analysis

k [rad/s / V]
l_1 [V / (rad/s)]
l_2 [V / rad]

l_1 \prop 1/K  -> OK
l_2 \prop 1/(K time)-> OK 


** Observer for the model with physical states
\small

*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:

  The observer is given by
      \begin{equation*}
      \begin{split}
      \dot{\hat{x}} &= \underbrace{A \hat{x} + B u{}}_{\text{simulation}} + \underbrace{\textcolor{mred}{K}\big(y - C\hat{x}\big)}_{\text{correction}}\\
 &= \left(A - \textcolor{mred}{K}C\right)\hat{x} +  B u{} + \textcolor{mred}{K}y\\
          &= \begin{bmatrix} \textcolor{black}{-\frac{1}{\tau}} & -\textcolor{mred}{k_1}  \\\textcolor{black}{1} & -\textcolor{mred}{k_2}  \end{bmatrix}\hat{x} +  B u{} + \textcolor{mred}{K}y
      \end{split}
      \end{equation*}
  with poles given by the eigenvalues of the matrix \(A_o = A - \textcolor{mred}{K}C\),
  which has characteristic polynomial
  \begin{equation*}
      \begin{split}
       \det \left( \begin{bmatrix} s & 0\\ 0 & s\end{bmatrix} - \begin{bmatrix} \textcolor{black}{-\frac{1}{\tau}} & - \textcolor{mred}{k_1}  \\\textcolor{black}{1} & -\textcolor{mred}{k_2}\end{bmatrix}\right)\\
 = s^2 + (\frac{1}{\tau} + \textcolor{mred}{k_2})s +  (\textcolor{mred}{k_1}+\frac{\textcolor{mred}{k_2}}{\tau})
      \end{split}
      \end{equation*}
  



*** Text
:PROPERTIES:
:BEAMER_col: 0.4
:END:

#+BEAMER: \pause

#+begin_export latex
\begin{center}
  \begin{tikzpicture}[scale=0.7]
  \pgfmathsetmacro{\wc}{2}
  \pgfmathsetmacro{\rp}{\wc*cos(45)}
    \draw[->] (-4,0) to (2,0) node[below] {Re};
    \draw[->] (0,-3) to (0,3) node[left] {Im};

    \draw[dashed, black!80] (0,\wc) arc[radius=\wc{}cm, start angle=90, end angle=270]; 

    \node[anchor=center, red!80!black] at (-\rp, \rp) {\Large $\times$ };
    \node[anchor=center, red!80!black] at (-\rp, -\rp) {\Large $\times$ };

    \draw[thin, <->] (0,0) -- node[above] {$\frac{d}{\tau_c}$} (-\rp, \rp);
    \end{tikzpicture}
\end{center}
#+end_export

Choose \(d\) between 2 and 10 and  obtain desired closed-loop characteristic polynomial

\begin{align*}
  (s-p_{o,1})(s-p_{o,2}) &= s^2 + \frac{d\sqrt{2}}{\tau_c}s + \frac{d^2}{\tau_c^2}
\end{align*}

** Observer for the model with physical states

Characteristic polynomial of the observer 
\[s^2 + (\frac{1}{\tau} + \textcolor{mred}{k_2})s + (\textcolor{mred}{k_1}+\frac{\textcolor{mred}{k_2}}{\tau})\]
Desired characteristic polynomial
\[  s^2 + \frac{\sqrt{2}d}{\tau_c}s + \frac{d^2}{\tau_c^2}\]
#+BEAMER: \pause

*Activity*
Determine the observer gains!

#+BEAMER: \pause
*Solution*
#+BEAMER: \pause
\begin{align*}
 \textcolor{mred}{k_1} &= \frac{d^2}{\tau_c^2} - \frac{\sqrt{2}d}{\tau_c\tau} + \frac{1}{\tau^2}\\
 \textcolor{mred}{k_2} &= \frac{\sqrt{2}d}{\tau_c} - \frac{1}{\tau} 
\end{align*}

*** Notes                                                          :noexport:

Dimensional analysis

k [rad/s / V]
l_1 [V / (rad/s)]
l_2 [V / rad]

l_1 \prop 1/K  -> OK
l_2 \prop 1/(K time)-> OK 

** Observer for the model with physical states                     :noexport:

  The observer is given by
      \begin{equation*}
      \begin{split}
      \begin{bmatrix} \dot{\hat{\omega}}\\\dot{\hat{\theta}}\end{bmatrix} &= \underbrace{A \hat{x} + B u{}}_{\text{simulation}} + \underbrace{\textcolor{mred}{K}\big(y - C\hat{x}\big)}_{\text{correction}}
 = \left(A - \textcolor{mred}{K}C\right)\hat{x}  + \textcolor{mred}{K}y +  B u{}\\
          &= \begin{bmatrix} \textcolor{black}{-\frac{1}{\tau}} & -\textcolor{mred}{k_1}  \\\textcolor{black}{1} & -\textcolor{mred}{k_2}  \end{bmatrix}\hat{x} + \begin{bmatrix} \textcolor{mred}{k_1}\\\textcolor{mred}{k_2}\end{bmatrix}y +  B u{}\\
  &=
      \end{split}
      \end{equation*}

  

