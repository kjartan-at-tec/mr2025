#+OPTIONS: toc:nil
# #+LaTeX_CLASS: koma-article 

#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation,aspectratio=169, usenames, dvipsnames]
#+OPTIONS: H:2

#+LaTex_HEADER: \usepackage{khpreamble}
#+LaTex_HEADER: \usepackage{amssymb}
#+LaTex_HEADER: \usepgfplotslibrary{groupplots}

#+LaTex_HEADER: \newcommand*{\shift}{\operatorname{q}}
#+LaTex_HEADER:   \definecolor{ppc}{rgb}{0.1,0.1,0.6}
#+LaTex_HEADER:   \definecolor{iic}{rgb}{0.6,0.1,0.1}
#+LaTex_HEADER:   \definecolor{ddc}{rgb}{0.1,0.6,0.1}


#+title:  PID control
# #+date: 2021-03-03

* What do I want the students to understand?			   :noexport:
  - Deviation variables
  - First and second order system modeling

* Which activities will the students do?			   :noexport:
  - Intuition about heat echange
  - Work with deviation variables
  - Assignment




* PID parameter intuition
** Feedback control
   #+begin_export latex
   \begin{center}
   \begin{tikzpicture}[node distance=22mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt}]
  { 
  \node[coordinate] (input) {};
  \node[sumnode, right of=input] (sum) {\tiny $\sum$};
  \node[block, right of=sum, node distance=2.6cm] (reg) {$F(s)$};
  \node[block, right of=reg, node distance=2.6cm] (plant) {$G(s)$};
  \node[coordinate, right of=plant, node distance=2cm] (output) {};
  \node[coordinate, below of=plant, node distance=12mm] (feedback) {};
 
  \draw[->] (plant) -- node[coordinate, inner sep=0pt] (meas) {} node[near end, above] {$y(t)$} (output);
  \draw[->] (meas) |- (feedback) -| node[very near end, left] {$-$} (sum);
  \draw[->] (input) -- node[very near start, above] {$r(t)$} (sum);
  \draw[->] (sum) -- node[above] {$e(t)$} (reg);
  \draw[->] (reg) -- node[above] {$u(t)$}(plant);
}
\end{tikzpicture}
\end{center}
   #+end_export

   

** The PID controller

   #+begin_export latex
   \begin{center}
     \begin{tikzpicture}[node distance=22mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt},scale=0.8, every node/.style={scale=0.8}]
    
       \node[coordinate] (input) {};
       \node[sumnode, right of=input, node distance=16mm] (sum) {\tiny $\Sigma$};
       \node[block, right of=sum, node distance=20mm] (pid)  {$F(s)$};
       \node[coordinate, below of=sum, node distance=12mm] (feedback) {};
       \node[coordinate, right of=pid, node distance=20mm] (output) {};

       \draw[->] (input) -- node[above, pos=0.3] {$r(t)$} (sum);
       \draw[->] (sum) -- node[above] {$e(t)$} (pid);
       \draw[->] (pid) -- node[above, near end] {$u(t)$} (output);
       \draw[->] (feedback) -- node[left, near start] {$y(t)$} node[right, pos=0.95] {-} (sum);
     \end{tikzpicture}
   \end{center}

   #+end_export

*Parallel form (ISA)*
\[   F(s) &= k_c\left( 1 + \frac{1}{\tau_i s} + \tau_d s\right) \]

*Series form*
\[F(s) = K_c \left( \frac{ \tau_I s + 1}{\tau_I s} \right) (\tau_D s + 1) 
= \underbrace{\frac{K_c(\tau_I + \tau_D)}{\tau_I}}_{k_c} \left(1 + \frac{1}{\underbrace{(\tau_I + \tau_D)}_{\tau_i} s} + \underbrace{\frac{\tau_I\tau_D}{\tau_I + \tau_D}}_{\tau_d}s \right) \]


** The PID - Parallel form
   \definecolor{ppc}{rgb}{0.1,0.1,0.6}
   \definecolor{iic}{rgb}{0.6,0.1,0.1}
   \definecolor{ddc}{rgb}{0.1,0.6,0.1}
   
   #+begin_export latex
   \begin{center}
     \begin{tikzpicture}[node distance=22mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt}]
    
       \node[coordinate] (input) {};
       \node[sumnode, right of=input, node distance=16mm] (sum) {\tiny $\Sigma$};
       \node[color=iic,block, right of=sum, node distance=28mm] (ii)  {$\frac{1}{\tau_is}$};
       \node[color=ppc, coordinate, above of=ii, node distance=10mm] (pp)  {};
       \node[color=ddc,block, below of=ii, node distance=10mm] (dd)  {$\tau_ds$};
       \node[sumnode, right of=ii, node distance=20mm] (sum2) {\tiny $\Sigma$};
       \node[block, right of=sum2, node distance=20mm] (gain)  {$k_c$};
       \node[coordinate, below of=sum, node distance=12mm] (feedback) {};
       \node[coordinate, right of=gain, node distance=20mm] (output) {};

       \draw[->] (input) -- node[above, pos=0.3] {$r(t)$} (sum);
       \draw[->] (sum) -- node[above, pos=0.2] {$e(t)$} node[coordinate] (mm) {}  (ii);
       \draw[->] (gain) -- node[above, near end] {$u(t)$} (output);
       \draw[->] (feedback) -- node[left, near start] {$y(t)$} node[right, pos=0.95] {-} (sum);
       \draw[->, color=ppc] (mm) |- (pp) -| node[right,] {$u_P(t)$} (sum2);
       \draw[->, color=ddc] (mm) |- (dd) -| node[right,] {$u_D(t)$} (sum2);
       \draw[->, color=iic] (ii)  -- node[above,] {$u_I(t)$} (sum2);
       \draw[->] (sum2) -- node[above, near end] {} (gain);

     \end{tikzpicture}
   \end{center}
   #+end_export

   \begin{align*}
   u(t) &= k_c\Big( \textcolor{ppc}{e(t)} + \textcolor{iic}{\frac{1}{\tau_i} \int_0^{t} e(\xi) d\xi} + \textcolor{ddc}{\tau_d \frac{d}{dt} e(t)} \Big)
   \end{align*}

** The PID - Parallel form, modified D-part
   \definecolor{ppc}{rgb}{0.1,0.1,0.6}
   \definecolor{iic}{rgb}{0.6,0.1,0.1}
   \definecolor{ddc}{rgb}{0.1,0.6,0.1}
   
   #+begin_export latex
   \begin{center}
     \begin{tikzpicture}[node distance=22mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt}]
    
       \node[coordinate] (input) {};
       \node[sumnode, right of=input, node distance=16mm] (sum) {\tiny $\Sigma$};
       \node[color=iic,block, right of=sum, node distance=28mm] (ii)  {$\frac{1}{\tau_is}$};
       \node[color=ppc, coordinate, above of=ii, node distance=10mm] (pp)  {};
       \node[color=ddc,block, below of=ii, node distance=10mm] (dd)  {$\tau_ds$};
       \node[sumnode, right of=ii, node distance=20mm] (sum2) {\tiny $\Sigma$};
       \node[block, right of=sum2, node distance=20mm] (gain)  {$k_c$};
       \node[coordinate, below of=sum, node distance=12mm] (feedback) {};
       \node[coordinate, right of=gain, node distance=20mm] (output) {};

       \draw[->] (input) -- node[above, pos=0.3] {$r(t)$} (sum);
       \draw[->] (sum) -- node[above, pos=0.2] {$e(t)$} node[coordinate] (mm) {}  (ii);
       \draw[->] (gain) -- node[above, near end] {$u(t)$} (output);
       \draw[->] (feedback) -- node[left, near start] {$y(t)$} node[right, pos=0.95] {-} (sum);
       \draw[->, color=ppc] (mm) |- (pp) -| node[right,] {$u_P(t)$} (sum2);
       \draw[->, color=ddc] (feedback |- dd) -- node[above, pos=0.95] {-} (dd);
       \draw[->, color=ddc] (dd) -| node[right,] {$u_D(t)$} (sum2)  ;
       \draw[->, color=iic] (ii)  -- node[above,] {$u_I(t)$} (sum2);
       \draw[->] (sum2) -- node[above, near end] {} (gain);

     \end{tikzpicture}
   \end{center}
   #+end_export

   \[    u(t) = k_c\Big( \textcolor{ppc}{e(t)} + \textcolor{iic}{\overbrace{\frac{1}{\tau_i} \int_0^{t} e(\xi) d\xi}^{u_I(t)}} + \textcolor{ddc}{ \underbrace{\tau_d \frac{d}{dt} \big(-y(t)\big)}_{u_D(t)}} \Big) \]

** The PID - Parallel form 
   #+begin_export latex
   \begin{center}
     \begin{tikzpicture}[node distance=22mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt}, scale=0.6, every node/.style={scale=0.6}]
    
       \node[coordinate] (input) {};
       \node[sumnode, right of=input, node distance=16mm] (sum) {\tiny $\Sigma$};
       \node[color=iic,block, right of=sum, node distance=28mm] (ii)  {$\frac{1}{\tau_is}$};
       \node[color=ppc, coordinate, above of=ii, node distance=10mm] (pp)  {};
       \node[color=ddc,block, below of=ii, node distance=10mm] (dd)  {$\tau_ds$};
       \node[sumnode, right of=ii, node distance=20mm] (sum2) {\tiny $\Sigma$};
       \node[block, right of=sum2, node distance=20mm] (gain)  {$k_c$};
       \node[coordinate, below of=sum, node distance=12mm] (feedback) {};
       \node[coordinate, right of=gain, node distance=20mm] (output) {};

       \draw[->] (input) -- node[above, pos=0.3] {$r(t)$} (sum);
       \draw[->] (sum) -- node[above, pos=0.2] {$e(t)$} node[coordinate] (mm) {}  (ii);
       \draw[->] (gain) -- node[above, near end] {$u(t)$} (output);
       \draw[->] (feedback) -- node[left, near start] {$y(t)$} node[right, pos=0.95] {-} (sum);
       \draw[->, color=ppc] (mm) |- (pp) -| node[right,] {$u_P(t)$} (sum2);
       \draw[->, color=ddc] (feedback |- dd) -- node[above, pos=0.95] {-} (dd) -| node[right,] {$u_D(t)$}   (sum2);
       \draw[->, color=iic] (ii)  -- node[above,] {$u_I(t)$} (sum2);
       \draw[->] (sum2) -- node[above, near end] {} (gain);

     \end{tikzpicture}
     \small
     \(  u(t) = k_c\Big( \textcolor{ppc}{e(t)} + \textcolor{iic}{\overbrace{\frac{1}{\tau_i} \int_0^{t} e(\xi) d\xi}^{u_I(t)}} + \textcolor{ddc}{ \underbrace{\tau_d \frac{d}{dt} \big(-y(t)\big)}_{u_D(t)}} \Big)\)
   \end{center}
   #+end_export

   #+begin_export latex
      \begin{center}
      \def\TT{1}
      \begin{tikzpicture}
      \begin{axis}[
       clip=false,
       width=14cm,
       height=4.2cm,
       ylabel={},
       xlabel={$t$},
       ymax = 2,
       ymin = -0.5,
       ]
	 \addplot[black, no marks, domain=-0.1:8, samples=200] {(x>0)*(1 - (1+x/\TT)*exp(-x/\TT)} node[coordinate, pin=-20:{$y(t)$}, pos=0.4] {};
	 \addplot[magenta!70!black, no marks, domain=-0.1:8, samples=200] coordinates {(-0.1, 0) (0,0) (0,1) (8,1)} node[coordinate, pin=90:{$r(t)$}, pos=0.4] {};
       \end{axis}

    \end{tikzpicture}
   \end{center}
   #+end_export
   *Activity* Sketch the error signal \(e(t)\), the derivative signal \(u_D(t)\) and the integral signal \(u_I(t)\) (use \(\tau_i=\tau_d=1\))

** The PID - Parallel form, solution
** The PID - Parallel form, solution
     \(  u(t) = k_c\Big( \textcolor{ppc}{e(t)} + \textcolor{iic}{\overbrace{\frac{1}{\tau_i} \int_0^{t} e(\xi) d\xi}^{u_I(t)}} + \textcolor{ddc}{ \underbrace{\tau_d \frac{d}{dt} \big(-y(t)\big)}_{u_D(t)}} \Big)\)
   #+begin_export latex
      \begin{center}
      \def\TT{1}
      \begin{tikzpicture}
      \begin{axis}[
       clip=false,
       width=14cm,
       height=5cm,
       ylabel={},
       xlabel={$t$},
       ymax = 2,
       ]
	 \addplot[black, no marks, domain=-0.1:8, samples=200] {(x>0)*(1 - (1+x/\TT)*exp(-x/\TT)} node[coordinate, pin=-20:{$y(t)$}, pos=0.4] {};
	 \addplot[magenta!70!black, no marks, domain=-0.1:8, samples=200] coordinates {(-0.1, 0) (0,0) (0,1) (8,1)} node[coordinate, pin=90:{$r(t)$}, pos=0.21] {};
	 \addplot[color=ppc, no marks, domain=0:8, samples=200] {(x>=0)*( (1+x/\TT)*exp(-x/\TT)} node[coordinate, pin=20:{$e(t)$}, pos=0.7] {};
	 \addplot[color=iic, no marks, domain=-0.1:8, samples=200] {(x>0)*(2*(1-exp(-x/\TT)) - \x/\TT*exp(-x/\TT))} node[coordinate, pin=-20:{$u_I(t)$}, pos=0.6] {};
	 \addplot[color=ddc, no marks, domain=-0.1:8, samples=200] {(x>0)*(-\x/\TT*exp(-x/\TT))} node[coordinate, pin=-20:{$u_D(t)$}, pos=0.4] {};
       \end{axis}

    \end{tikzpicture}
   \end{center}
   #+end_export

** The PID - practical form
   \definecolor{ppc}{rgb}{0.1,0.1,0.6}
   \definecolor{iic}{rgb}{0.6,0.1,0.1}
   \definecolor{ddc}{rgb}{0.1,0.5,0.1}
   
   #+begin_export latex
   \begin{center}
     \begin{tikzpicture}[node distance=22mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt}]
    
       \node[coordinate] (input) {};
       \node[sumnode, right of=input, node distance=16mm] (sum) {\tiny $\Sigma$};
       \node[color=iic,block, right of=sum, node distance=28mm] (ii)  {$\frac{1}{\tau_is}$};
       \node[color=ppc, coordinate, above of=ii, node distance=10mm] (pp)  {};
       \node[color=ddc,block, below of=ii, node distance=13mm] (dd)  {$\frac{\tau_ds}{\frac{\tau_d}{N}s + 1}$};
       \node[sumnode, right of=ii, node distance=20mm] (sum2) {\tiny $\Sigma$};
       \node[block, right of=sum2, node distance=20mm] (gain)  {$k_c$};
       \node[coordinate, below of=sum, node distance=12mm] (feedback) {};
       \node[coordinate, right of=gain, node distance=20mm] (output) {};

       \draw[->] (input) -- node[above, pos=0.3] {$r(t)$} (sum);
       \draw[->] (sum) -- node[above, pos=0.2] {$e(t)$} node[coordinate] (mm) {}  (ii);
       \draw[->] (gain) -- node[above, near end] {$u(t)$} (output);
       \draw[->] (feedback) -- node[left, near start] {$y(t)$} node[right, pos=0.95] {-} (sum);
       \draw[->, color=ppc] (mm) |- (pp) -| node[right,] {$u_P(t)$} (sum2);
       \draw[->, color=ddc] (feedback |- dd) -- node[above, pos=0.95] {-} (dd);
       \draw[->, color=ddc] (dd) -| node[right,] {$u_D(t)$} (sum2)  ;
       \draw[->, color=iic] (ii)  -- node[above,] {$u_I(t)$} (sum2);
       \draw[->] (sum2) -- node[above, near end] {} (gain);

     \end{tikzpicture}
   \end{center}
   #+end_export

   The parameter \(N\) is chosen to limit the influence of noisy measurements. Typically,
   \[  3 < N < 20 \]

* PID tuning - (Smith and Corripio) Ziegler Nichols
** PID tuning
** Method by Smith & Corripio using table by Ziegler-Nichols
   Given process model (fitted to response of the system) \[ G(s) = K \frac{\mathrm{e}^{-s\theta}}{\tau s + 1} \] and PID controller
   \[ F(s) = k_c\left( 1 + \frac{1}{\tau_i s} + \tau_d s\right) \]
   Choose the PID parameters according to the following table (Ziegler-Nichols, 1943)
   #+begin_export latex
      \begin{center}
      \setlength{\tabcolsep}{20pt}
      \renewcommand{\arraystretch}{1.5}
      \begin{tabular}{llll}
      Controller & \(k_c\) & \(\tau_i\) & \(\tau_d\)\\
     \hline\hline
     P & \(\frac{\tau}{\theta K}\) &  & \\
     PI & \(\frac{0.9\tau}{\theta K}\) & \(\frac{\theta}{0.3}\) & \\
     PID & \(\frac{1.2\tau}{\theta K}\) & \(2\theta\) & \(\frac{\theta}{2}\)\\
     \hline
   \end{tabular}
   \end{center}

   #+end_export

   Gives good control for \[0.1 < \frac{\theta}{\tau} < 0.6.\]



* Analytical PID tuning

** Analytical PID tuning
** Analytical PID tuning
   #+begin_export latex
   \begin{center}
   \begin{tikzpicture}[node distance=22mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt}]
  { 
  \node[coordinate] (input) {};
  \node[sumnode, right of=input] (sum) {\tiny $\sum$};
  \node[block, right of=sum, node distance=2.6cm] (reg) {$F(s)$};
  \node[block, right of=reg, node distance=2.6cm] (plant) {$G(s)$};
  \node[coordinate, right of=plant, node distance=2cm] (output) {};
  \node[coordinate, below of=plant, node distance=12mm] (feedback) {};
 
  \draw[->] (plant) -- node[coordinate, inner sep=0pt] (meas) {} node[near end, above] {$y(t)$} (output);
  \draw[->] (meas) |- (feedback) -| node[very near end, left] {$-$} (sum);
  \draw[->] (input) -- node[very near start, above] {$r(t)$} (sum);
  \draw[->] (sum) -- node[above] {$e(t)$} (reg);
  \draw[->] (reg) -- node[above] {$u(t)$}(plant);
}
\end{tikzpicture}
\end{center}
   #+end_export

*Activity*  Solve for \(F(s)\) in the closed-loop transfer function \[G_c(s) = \frac{G(s)F(s)}{1 + G(s)F(s)}\] 

** Analytical PID tuning - Solution
** Analytical PID tuning - Solution
Solving for \(F(s)\) in the closed-loop transfer function \(G_c(s) = \frac{G(s)F(s)}{1 + G(s)F(s)}\) 

\[ \big(1 + G(s)F(s)\big) G_c(s) = G(s)F(s)\]
\[ G_c(s) = \big( 1 - G_c(s)\big) G(s)F(s)\]
\[F(s) = \frac{\frac{G_c(s)}{G(s)}}{1 - G_c(s)}\]

** Analytic PID tuning - first-order with delay
   #+begin_export latex
   \begin{center}
   \begin{tikzpicture}[node distance=22mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt}]
  { 
  \node[coordinate] (input) {};
  \node[sumnode, right of=input] (sum) {\tiny $\sum$};
  \node[block, right of=sum, node distance=2.6cm] (reg) {$F(s)$};
  \node[block, right of=reg, node distance=2.6cm] (plant) {$G(s)$};
  \node[coordinate, right of=plant, node distance=2cm] (output) {};
  \node[coordinate, below of=plant, node distance=12mm] (feedback) {};
 
  \draw[->] (plant) -- node[coordinate, inner sep=0pt] (meas) {} node[near end, above] {$y(t)$} (output);
  \draw[->] (meas) |- (feedback) -| node[very near end, left] {$-$} (sum);
  \draw[->] (input) -- node[very near start, above] {$r(t)$} (sum);
  \draw[->] (sum) -- node[above] {$e(t)$} (reg);
  \draw[->] (reg) -- node[above] {$u(t)$}(plant);
}
\end{tikzpicture}
\end{center}
   #+end_export

Given model \(G(s) = K \frac{\mathrm{e}^{-s\theta}}{\tau s + 1}\) of the process and desired closed-loop transfer function \(G_c(s) = \frac{\mathrm{e}^{-s\theta}}{\tau_c s + 1}\)

*Activity*  Show that the controller becomes
\[ F(s) = \frac{1}{K} \left( \frac{\tau s + 1}{\tau_c s + 1 - \mathrm{e}^{-s\theta}} \right) \approx \frac{1}{K} \left( \frac{\tau s + 1}{(\tau_c+\theta) s}\right)  = \underbrace{\frac{\tau}{K(\tau_c+\theta)}}_{k_c} \left( 1 + \frac{1}{\underbrace{\tau}_{\tau_i} s} \right).\]
Which is a PI-controller with \(k_c = \frac{\tau}{K(\tau_c+\theta)}\) and \(\tau_i = \tau\).


** SIMC-PID tuning rule
   [ SIMC stands for /SIMple Control/ or /Skogestad Internal Model Control/ ]
   #+begin_export latex
   \begin{center}
   \begin{tikzpicture}[node distance=22mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt}scale=0.5, every node/.style={scale=0.5}]
  { 
  \node[coordinate] (input) {};
  \node[sumnode, right of=input] (sum) {\tiny $\sum$};
  \node[block, right of=sum, node distance=2.6cm] (reg) {$F(s)$};
  \node[block, right of=reg, node distance=2.6cm] (plant) {$G(s)$};
  \node[coordinate, right of=plant, node distance=2cm] (output) {};
  \node[coordinate, below of=plant, node distance=12mm] (feedback) {};
 
  \draw[->] (plant) -- node[coordinate, inner sep=0pt] (meas) {} node[near end, above] {$y(t)$} (output);
  \draw[->] (meas) |- (feedback) -| node[very near end, left] {$-$} (sum);
  \draw[->] (input) -- node[very near start, above] {$r(t)$} (sum);
  \draw[->] (sum) -- node[above] {$e(t)$} (reg);
  \draw[->] (reg) -- node[above] {$u(t)$}(plant);
}
\end{tikzpicture}
\end{center}
   #+end_export

Given model of the process and desired closed-loop system \[G(s) = K \frac{\mathrm{e}^{-s\theta}}{(\tau_1 s + 1)(\tau_2 s + 1)}, \quad \tau_1 \ge \tau_2; \qquad G_c(s) = \frac{\mathrm{e}^{-s\theta}}{\tau_c s + 1} \] Good robustness is obtained with PID controller

\[F(s) = K_c \left( \frac{ \tau_I s + 1}{\tau_I s} \right) (\tau_d s + 1) 
= \frac{K_c(\tau_I + \tau_d)}{\tau_I} \left(1 + \frac{1}{(\tau_I + \tau_D) s} + \frac{\tau_I\tau_D}{\tau_I + \tau_D}s \right) \]
with 
\[ K_c = \frac{\tau_1}{K(\tau_c + \theta)}, \qquad \tau_I = \min\{\tau_1, 4(\tau_c + \theta)\}, \qquad \tau_D = \tau_2 \]



** SIMC-PID tuning rule for double-integrating process with delay
Given model of the process and desired closed-loop system \[G(s) = K \frac{\mathrm{e}^{-s\theta}}{s^2},\qquad G_c(s) = \frac{\mathrm{e}^{-s\theta}}{\tau_c s + 1} \] Good robustness is obtained with PID controller

\[F(s) = K_c \left( \frac{ \tau_I s + 1}{\tau_I s} \right) (\tau_D s + 1) 
= \frac{K_c(\tau_I + \tau_D)}{\tau_I} \left(1 + \frac{1}{(\tau_I + \tau_D) s} + \frac{\tau_I\tau_D}{\tau_I + \tau_D}s \right) \]
with 
\[ K_c = \frac{1}{4K(\tau_c + \theta)^2}, \qquad \tau_I = 4(\tau_c + \theta), \qquad \tau_D = 4(\tau_c + \theta) \]



** SIMC-PID tuning rule for double-integrating process with delay

   The ODE \( \ddot{p}(t) = \dot{v}(t) = K u(t-\theta) \) has the solution
   \[ v(t) = v(0) + K \int_0^{t-\theta} u(\tau)d\tau \] 
   
   #+begin_export latex
   \begin{center}
     \begin{tikzpicture}[]
     \begin{axis} [
     width= 10cm,
     height = 5cm,
     axis lines=middle,
     axis line style={->},
     xtick={0,0.02},
     ytick={0, 500},
     xmin=-0.01,
     xmax=0.1,
     ymin=0,
     ymax=700,
     xlabel=$t$,
     ylabel=$u(t)$,
     ]

     \addplot[solid, thick,  blue!70!black, const plot] coordinates { (-0.1, 0) (0,500) (0.02, 0) (0.1, 0)};
\end{axis}  
     \end{tikzpicture}
   \end{center}
   #+end_export

   \[ K = \frac{v_f - v(0)}{\int_0^\infty u(\tau)d\tau} = \frac{v_f - v(0)}{10}\]
