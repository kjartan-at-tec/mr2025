#+OPTIONS: toc:nil
# #+LaTeX_CLASS: koma-article 

#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation,aspectratio=169, usenames, dvipsnames]
#+OPTIONS: H:2

#+LaTex_HEADER: \usepackage{khpreamble}
#+LaTex_HEADER: \usepackage{amssymb}
#+LaTex_HEADER: \usepgfplotslibrary{groupplots}

#+LaTex_HEADER: \newcommand*{\shift}{\operatorname{q}}
#+LaTex_HEADER:   \definecolor{ppc}{rgb}{0.1,0.1,0.6}
#+LaTex_HEADER:   \definecolor{iic}{rgb}{0.6,0.1,0.1}
#+LaTex_HEADER:   \definecolor{ddc}{rgb}{0.1,0.6,0.1}


#+title: Compensator design - Loop shaping
# #+date: 2020-09-01

* What do I want the students to understand?			   :noexport:
  - How to design a lead-lag compensator

* Which activities will the students do?			   :noexport:
  1. Determine effect of PD regulator in Bode plot and in root locus
  2. Sketch the Sensitivity function from Nyquist plot

* Intro

** Partial exam 2 is Thursday March 22 - What to expect		   :noexport:

   1. Sketch a root locus
   2. Interpret a root locus
   3. Design lead-lag compensator using root locus
   4. Apply the Nyquist stability criterio3n
   5. Interpret Bode plots
   6. Show understanding of the connection between the Bode plot and the Nyquist plot
   7. Determine phase margin and gain margin from Nyquist plots and Bode plots
   8. Show understanding of the connection between a Bode plot and the response of the LTI to sinusoidal input (sine in - sine out). 

* Preparation: The proportional control of the normalized DC-motor
** Proportional control of the normalized DC motor

*** Graphics
:PROPERTIES:
:BEAMER_col: 0.5
:END:

    \begin{center}
     \includegraphics[width=1.0\linewidth]{../../figures/block-DC-feedback}
    \end{center}

*** plot
:PROPERTIES:
:BEAMER_col: 0.5
:END:

    \begin{center}
     \def\ggain{1}
     \def\Tcnst{1}
     \begin{tikzpicture}
       \begin{axis}[
       width=7cm,
       height=6cm,
       grid = both,
       xlabel = {Time [$\tau$]},
       ylabel = {Angle [20 rad]},
       title = {$K=1$},
       %xtick = {0, \tdelay, \tone, \two},
       %xticklabels = {0, $\theta$, $\theta+\frac{\tau}{3}$, $\theta + \tau$},
       %ytick = {0, \yone, \ytwo, \uampl, \yfinal},
       %yticklabels = {0, $0.283y_{f}$, $0.632y_f$, $u_f$, $y_f$},
       xmin = -2, xmax=20,
       minor y tick num=4,
       minor x tick num=4,
       every major grid/.style={red, opacity=0.5},
       ]
	 \addplot [thick, black, no marks, domain=-2:20, samples=200] {x>0};
	 \addplot [thick, red!60!black, no marks, domain=-0.2:20, samples=100] {(x>0)*(1 - (exp(-x/2)* (sqrt(3)* cos(deg((sqrt(3)* x)/2)) + sin(deg((sqrt(3)* x)/2))))/sqrt(3))};
       \end{axis}
     \end{tikzpicture}
    \end{center}


** Proportional control of the normalized DC motor

*** Graphics
:PROPERTIES:
:BEAMER_col: 0.5
:END:

    \begin{center}
     \includegraphics[width=1.0\linewidth]{../../figures/block-DC-feedback}
    \end{center}

*** plot
:PROPERTIES:
:BEAMER_col: 0.5
:END:

    \begin{center}
     \includegraphics[width=1.0\linewidth]{../../figures/bode-closed-loop-normalized-DC}
    \end{center}

** Proportional control of the normalized DC motor

*** Graphics
:PROPERTIES:
:BEAMER_col: 0.5
:END:

    \begin{center}
     \includegraphics[width=1.0\linewidth]{../../figures/block-DC-feedback}
    \end{center}

    *Activity* Determine the cross-over frequency and the phase margin.
*** plot
:PROPERTIES:
:BEAMER_col: 0.5
:END:

    \begin{center}
     \includegraphics[width=1.0\linewidth]{../../figures/bode-loop-gain-normalized-DC}
    \end{center}
*** Notes                                                          :noexport:
wc = 0.8
\varphi_m = -129 - (-180) = 51

* Lead-lag design

** Specifications on the frequency properties of the closed-loop system

#+BEGIN_CENTER 
 \includegraphics[width=0.999\linewidth]{../../figures/spec-bode-closed-loop-new}
#+END_CENTER

** How to achieve the frequency-domain specifications
*** Problem statement
    :PROPERTIES:
    :BEAMER_col: 0.28
    :END:

    \[G_c(i\omega) = \frac{ G_o(i\omega)}{1 + G_o(i\omega)}\]

 \includegraphics[width=1.1\linewidth]{../../figures/spec-bode-closed-loop-new}

*Activity* Which of the Bode plots to the right shows the correct loop gain \(G_o(i\omega)\)?

*** Plots
    :PROPERTIES:
    :BEAMER_col: 0.72
    :END:

#+BEGIN_CENTER 
 \includegraphics[width=1.02\linewidth]{../../figures/spec-bode-open-loop-new}
#+END_CENTER

** The design procedure - overview                                 :noexport:
#+BEGIN_CENTER
\fbox{Specifications on the closed-loop system \(G_c(i\omega)\)}\\
\(\downarrow\)\\
\fbox{Specifications on the loop gain \(G_o(i\omega)\)}\\
\(\downarrow\)\\
\fbox{Determine \(F(i\omega)\) in \(G_o(i\omega) = G(i\omega)F(i\omega)\)}\\
#+END_CENTER 

** From specifications on \(G_c\) to specifications on \(G_o\)

#+BEGIN_CENTER
   | Closed-loop specifications        | Loop gain specifications               |
   |-----------------------------------+----------------------------------------|
   | High bandwidth \(\omega_B\)       | High cross-over frequency \(\omega_c\) |
   | Low resonance peak \(M_p\)        | Large phase margin \(\varphi_m\)       |
   | Static gain \( G_c(0) \approx 1\) | static gain \(G_o(0)\) high            |
   |-----------------------------------+----------------------------------------|
#+END_CENTER


** Design procedure in detail                                      :noexport:

Given \(G(i\omega)\) and specifications on \(G_o(i\omega)\): \(\omega_c\), \(\varphi_m\), steady-state error \(e_0\).

#+BEGIN_CENTER 
 \includegraphics[width=1.02\linewidth]{../../figures/design-procedure}
#+END_CENTER
   

* Exercise							   :noexport:
** Exercise: phase advance

\[G(s) = \frac{2.236}{s(s^2+2s+2)}\]

Specifications: $\omega_c = 1$ and $\varphi_m > 70\degree$

** Exercise: phase advance

\[G(s) = \frac{2.236}{s(s^2+2s+2)}\]


*Sketch the root locus!*

** Exercise: phase advance

\[G(s) = \frac{2.236}{s(s^2+2s+2)}\]

#+BEGIN_CENTER 
 \includegraphics[width=0.5\linewidth]{../figures/lead-lag-prep-rlocus-crop}
#+END_CENTER


** Exercise: phase advance, contd

\(G(s) = \frac{2.236}{s(s^2+2s+2)}\) 
Which is the corresponding Nyquist plot?
#+BEGIN_CENTER 
 \includegraphics[width=0.6\linewidth]{../figures/lead_lag_prep_nyquist_plots-crop}
#+END_CENTER

** Exercise: phase advance, contd

\[G(s) = \frac{2.236}{s(s^2+2s+2)}\]

#+BEGIN_CENTER 
 \includegraphics[width=0.9\linewidth]{../figures/lead-lag-prep-nyq-bode-crop}
#+END_CENTER

Have the correct cross-over frequency $\omega_c$, but too little phase margin.

** Exercise: phase advance, contd

Try PD-control \(G_o(s) = G(s)F(s)\), with \(F(s) = \frac{s+1}{\sqrt{2}}\)

#+BEGIN_CENTER 
 \includegraphics[width=0.9\linewidth]{../figures/lead-lag-prep-bode-bode-crop}
#+END_CENTER

What is the resulting phase margin for \(G_o\)?

** Exercise: phase advance, solution

#+BEGIN_CENTER 
 \includegraphics[width=0.9\linewidth]{../figures/lead-lag-prep-Gc-nyq-bode-crop}
#+END_CENTER

** Exercise: phase advance, solution

#+BEGIN_CENTER 
 \includegraphics[width=0.9\linewidth]{../figures/lead_lag_prep_Gc-crop}
#+END_CENTER


* Why lead filter instead of PD controller                         :noexport:
** The problem with a PD-controller
#+BEGIN_CENTER 
\begin{tikzpicture}
    \node[anchor=south west,inner sep=0] at (0,0) {\includegraphics[width=0.9\linewidth]{../../figures/lead-lag-prep-bode-bode-crop}};
\draw[red,ultra thick,rounded corners] (9.7,2.8) rectangle (12.3,4.5);
\end{tikzpicture} 
#+END_CENTER

** The problem with a PD-controller, contd
   \begin{center}
     \begin{tikzpicture}[scale = 0.8, node distance=20mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt}]
     
     \node[coordinate] (refinput) {};
     \node[sumnode, right of=refinput, node distance=20mm] (sumerr) {\tiny $\sum$};
     \node[block, right of=sumerr] (controller) {$F(s)$};
     \node[block, right of=controller, node distance=24mm] (valve) {$G(s)$};
     \node[coordinate, right of=valve, node distance=30mm] (output) {};
     \draw[->] (valve) -- node[coordinate] (measure) {} node[above, pos=0.8] {$y(t)$} (output);
     \node[sumnode, below of=measure, node distance=16mm] (sumnoise) {\tiny $\sum$};
     \node[coordinate, right of=sumnoise, node distance=12mm] (noise) {};

     \draw[->] (refinput) -- node[above, pos=0.3] {$y_{ref}(t)$} (sumerr);
     \draw[->] (sumerr) -- node[above] {$e(t)$} (controller);
     \draw[->] (controller) -- node[above] {$u(t)$} (valve);
     \draw[->] (measure) -- node[above] {} (sumnoise);
     \draw[->] (sumnoise) -| node[above, pos=0.3]{$y_m(t)$} node[right, pos=0.95] {$-$} (sumerr);
     \draw[->] (noise) -- node[above] {$n(t)$} (sumnoise);
     \end{tikzpicture}
   \end{center}




** The problem with a PD-controller, contd
   \begin{center}
     \begin{tikzpicture}[scale = 0.8, node distance=20mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt}]
     
     \node[coordinate] (refinput) {};
     \node[sumnode, right of=refinput, node distance=20mm] (sumerr) {\tiny $\sum$};
     \node[block, right of=sumerr] (controller) {$F(s)$};
     \node[block, right of=controller, node distance=24mm] (valve) {$G(s)$};
     \node[coordinate, right of=valve, node distance=30mm] (output) {};
     \draw[->] (valve) -- node[coordinate] (measure) {} node[above, pos=0.8] {$y(t)$} (output);
     \node[sumnode, below of=measure, node distance=16mm] (sumnoise) {\tiny $\sum$};
     \node[coordinate, right of=sumnoise, node distance=12mm] (noise) {};

     \draw[->] (refinput) -- node[above, pos=0.3] {$y_{ref}(t)$} (sumerr);
     \draw[->] (sumerr) -- node[above] {$e(t)$} (controller);
     \draw[->] (controller) -- node[above] {$u(t)$} (valve);
     \draw[->] (measure) -- node[above] {} (sumnoise);
     \draw[->] (sumnoise) -| node[above, pos=0.3]{$y_m(t)$} node[right, pos=0.95] {$-$} (sumerr);
     \draw[->] (noise) -- node[above] {$n(t)$} (sumnoise);
     \end{tikzpicture}
   \end{center}

   *High frequency measurement noise entering the system is amplified in the PD-controller \(F(s)\)*



** PD-controller + Low-pass filter = lead compensator + gain

   \begin{center}
     \begin{tikzpicture}[scale = 0.8, node distance=20mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt}]
     
     \node[coordinate] (refinput) {};
     \node[sumnode, right of=refinput, node distance=12mm] (sumerr) {\tiny $\sum$};
     \node[block, right of=sumerr, node distance=30mm] (controller) {$F_{PD}=K(\alpha_dT_ds + 1)$};
     \node[block, right of=controller, node distance=40mm] (lowpass) {$F_{LP} = \frac{1}{T_ds + 1}$};
     \node[block, right of=lowpass, node distance=30mm] (valve) {$G(s)$};
     \node[coordinate, right of=valve, node distance=25mm] (output) {};
     \draw[->] (valve) -- node[coordinate] (measure) {} node[above, pos=0.8] {$y(t)$} (output);
     \node[sumnode, below of=measure, node distance=16mm] (sumnoise) {\tiny $\sum$};
     \node[coordinate, right of=sumnoise, node distance=12mm] (noise) {};

     \draw[->] (refinput) -- node[above, pos=0.3] {$y_{ref}(t)$} (sumerr);
     \draw[->] (sumerr) -- node[above] {$e(t)$} (controller);
     \draw[->] (controller) -- node[above] {} (lowpass);
     \draw[->] (lowpass) -- node[above] {$u(t)$} (valve);
     \draw[->] (measure) -- node[above] {} (sumnoise);
     \draw[->] (sumnoise) -| node[above, pos=0.3]{$y_m(t)$} node[right, pos=0.95] {$-$} (sumerr);
     \draw[->] (noise) -- node[above] {$n(t)$} (sumnoise);
     \end{tikzpicture}
   \end{center}

   \(F(s) = KF_{lead} = K \frac{\alpha T_d s + 1}{T_ds + 1} \)

** The lead- and lag filters/compensators
   #+BEGIN_CENTER 
    \includegraphics[width=0.68\linewidth]{../../figures/lead-lag-bode-crop}
   #+END_CENTER
   
   \(F_{lead} = \frac{\alpha_d T_d s + 1}{T_ds + 1}, \; \alpha_d > 1  \qquad F_{lag} = \frac{1}{\alpha_i} \cdot \frac{\alpha_i T_i s + 1}{T_is + 1}, \; \alpha_i < 1 \; \text{or}\; F_{lag} = \frac{T_is + 1}{T_is}\)
   

* Design example - DC motor
** Position control of the DC motor
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.7
:END:

    \begin{center}
      \includegraphics[width=0.9\linewidth]{../../figures/block-DC-lead-compensator}
    \end{center}
*** Text
:PROPERTIES:
:BEAMER_col: 0.3
:END:

Specifications:
1) \(\omega_B \approx \omega_c = \unit{2}{\rad\per\second}\)
2) \(\varphi_m > \unit{60}{\degree}\)
   

** Position control of the DC motor
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.6
:END:

    \begin{center}
      \includegraphics[width=0.9\linewidth]{../../figures/bode-plant-normalized-DC}
    \end{center}

#    The phasemargin:
# \[   \varphi_m = G_o(i\omega_c) - (-\unit{180}{\degree}) \quad \Leftrightarrow\quad G_o(i\omega_c) - \varphi_m = -\unit{180}{\degree}\]

*** Text
:PROPERTIES:
:BEAMER_col: 0.4
:END:

Specifications:
1) \(\omega_B \approx \omega_c = \unit{2}{\rad\per\second}\)
2) \(\varphi_m = \arg G_o(i\omega_c) - (-\unit{180}{\degree}) > \unit{60}{\degree}\)


*Activity*
1) What is \(|G (i\omega_c)|\)?
2) What is  \(\arg G(i\omega_c)\)?
3) What should \(\arg G_o(i\omega_c) \) be to satisfy the phase margin requirement?
4) How much phase advance is needed at the desired cross-over frequency?

*** Notes                                                          :noexport:

1) |1/(2i + 1)/2| = 1/sqrt(5)/2 = -13dB. 
2) G(i\omega_c) = -154
3) G_o(i\omega_c) = -180 + \varphi_m = -120
4) \arg G_o = \arg G + \arg F = -120  => \arg F = -120 -\arg G = -120 + 154 = 34

** Position control of the DC motor - obtaining the phase advance

\[F_{lead}(s) = \frac{\alpha_d T_d s + 1}{T_d s + 1}\]

    \begin{center}
      \includegraphics[width=0.9\linewidth]{../../figures/bode-lead-compensator}
    \end{center}

** The maximum phase advance of the lead compensator 
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:

\[F_{lead}(s) = \frac{\alpha_d T_d s + 1}{T_d s + 1}\]

\[ \phi = \max \arg F_{lead}(i\omega)\]
\[ \sin\phi = \frac{\alpha_d -1}{\alpha_d + 1}\quad \Leftrightarrow \quad \alpha_d = \frac{1 + \sin\phi}{1-\sin\phi} \]

*Activity* Find the value of \(\alpha_d\) that gives the necessary maximum positive phase \(\arg F_{lead}(i\omega_c) = \unit{34}{\degree}\).


*** Text
:PROPERTIES:
:BEAMER_col: 0.6
:END:

#+begin_export latex
\begin{center}
  \begin{tikzpicture}
    \begin{axis}[xlabel=$\alpha_d$, ylabel=$\phi$,
    grid=both,
    minor x tick num=9,
    minor y tick num=9,
      every major grid/.style={red, opacity=0.5},
]
    \addplot[black, thick, smooth, no marks, domain=1:40, samples=300] {asin((\x-1)/(\x+1))};
    \end{axis}
  \end{tikzpicture}
\end{center}

#+end_export
*** Notes                                                          :noexport:
\alpha_d = 3.5 => 4 to have some margin

** Position control of the DC motor - placing the phase peak

\[F_{lead}(s) = \frac{\alpha_d T_d s + 1}{T_d s + 1}\]

    \begin{center}
      \includegraphics[width=0.9\linewidth]{../../figures/bode-lead-compensator}
    \end{center}

*Activity* Determine the time constant $T_d$ that will place the peak of the phase curve at the desired cross-over frequency \(\omega_c = 2\).

*** Notes                                                          :noexport:
1/\sqrt{\alpha_d}/T_d = \omega_c  => T_d = 1/\sqrt{\alpha_d}/\omega_c
= 1/2/2 = 0.25


** Position control of the DC motor - The resulting lead compensator

\[F_{lead}(s) = \frac{\alpha_d T_d s + 1}{T_d s + 1} = \frac{s + 1}{0.25s + 1}\]

    \begin{center}
      \includegraphics[width=0.9\linewidth]{../../figures/bode-lead-compensator-numerical}
    \end{center}


** Position control of the DC motor - Getting the gain right
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.5
:END:

    \begin{center}
      \includegraphics[width=1.0\linewidth]{../../figures/bode-plant-lead-normalized-DC}
    \end{center}

#    The phasemargin:
# \[   \varphi_m = G_o(i\omega_c) - (-\unit{180}{\degree}) \quad \Leftrightarrow\quad G_o(i\omega_c) - \varphi_m = -\unit{180}{\degree}\]

*** Text
:PROPERTIES:
:BEAMER_col: 0.4
:END:
Specifications

1) \(\omega_B =\approx \omega_c = \unit{2}{\rad\per\second}\)
2) \(\varphi_m = \arg G_o(i\omega_c) - (-\unit{180}{\degree}) > \unit{60}{\degree}\)

*Activity*
\begin{align*}
20\log G_o(i\omega) &= 20\log K F(i\omega)G(i\omega)\\
 &= 20\log K + 20\log F(i\omega) + 20\log G(i\omega)
 \end{align*}
so, what should the gain \(K\) be to obtain
\[  |G_o(i2)| = 1 = 0\text{dB}?\]

*** Notes                                                          :noexport:
Reading: 20\log K = 0 - 20\log F - 20\log G = 0 -6 - (-13) = 7 dB
K = 2.24
Calculating
KFG = 1 => K = 1/G/F = 1*sqrt(5)*2/sqrt(4)= sqrt(5) = 2.24


** Position control of the DC motor - Results
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.5
:END:

    \begin{center}
      \includegraphics[width=1.0\linewidth]{../../figures/bode-loop-gain-lead-normalized-DC-crop}
    \end{center}

#    The phasemargin:
# \[   \varphi_m = G_o(i\omega_c) - (-\unit{180}{\degree}) \quad \Leftrightarrow\quad G_o(i\omega_c) - \varphi_m = -\unit{180}{\degree}\]


*** Text
:PROPERTIES:
:BEAMER_col: 0.4
:END:

    \begin{center}
     \includegraphics[width=1.0\linewidth]{../../figures/block-DC-lead-compensator-numerical}
    \end{center}

    *Activity* Identify the frequency responses of: 1) The plant, 2) The compensator, 3) The loop gain, and 4) The closed-loop system.
    

*** Notes                                                          :noexport:
Reading: 20\log K = 0 - 20\log F - 20\log G = 0 -6 - (-13) = 7 dB
K = 2.24
Calculating
KFG = 1 => K = 1/G/F = 1*sqrt(5)*2/sqrt(4)= sqrt(5) = 2.24

** Position control of the DC motor - Results
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.5
:END:

    \begin{center}
     \includegraphics[width=\linewidth]{../../figures/nyquist-loop-gain-lead-normalized-DC}
    \end{center}

*** Text
:PROPERTIES:
:BEAMER_col: 0.5
:END:

        \begin{center}
      \includegraphics[width=1.0\linewidth]{../../figures/step-response-lead-normalized-DC}
    \end{center}


** Applying the compensator design to a particular motor

    \begin{center}
     \includegraphics[width=.7\linewidth]{../../figures/block-DC-lead-compensator-numerical}
    \end{center}

    #+BEAMER: \pause
    \begin{center}
     \includegraphics[width=.7\linewidth]{../../figures/block-DC-lead-compensator-particular-sol}
    \end{center}

    #+BEAMER: \pause
    \begin{center}
     \includegraphics[width=.7\linewidth]{../../figures/block-DC-lead-compensator-particular-sol-white}
    \end{center}


* Design example - radar antenna                                   :noexport:

** Position control of a radar antenna
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.5
:END:

    \begin{center}
      \includegraphics[width=0.9\linewidth]{../../figures/fig5_1a-crop}
    \end{center}
*** Text
:PROPERTIES:
:BEAMER_col: 0.5
:END:

Specifications:
1) \(\omega_B \approx \omega_c = \unit{1}{\rad\per\second}\)
2) \(\varphi > \unit{40}{\degree}\)
3) \( e_0 < \epsilon = 0.001\)
   

** Position control of a radar antenna
#+BEGIN_CENTER 
 \includegraphics[width=\linewidth]{../figures/fig5_1b}
#+END_CENTER

The input signal $v$ is a wind disturbance. The input signal $d$ represents a calibration error in the amplifier for the AC motor.

** Nyquist plot of the plant
#+BEGIN_CENTER 
 \includegraphics[width=0.4\linewidth]{../../figures/5_1-nyqlog-crop}
#+END_CENTER

*Activity* Will proportional control work? (The open-loop system is stable)

** Bode plot of the plant

#+BEGIN_CENTER 
 \includegraphics[width=0.6\linewidth]{../../figures/5_1-bode-crop.pdf}
#+END_CENTER

*Activity*
1) What is the gain of the plant at the desired cross-over frequency \(\omega_c = 1\)?
2) What is the phase shift of the plant at \(\omega_c=1\)?

*** Notes                                                          :noexport:
|G(i)| = 3.8 = 11.6dB
arg G(i) = -203 deg (middle between -180 and -225)

Want \varphi_m = arg G_0(i) - (-180) > 40 => arg G_o(i) > -140. Since
arg G_o(i) = arg G(i) + arg K +  arg F_lag(i) + arg F_lead(i) => arg F(i) = -140 + 203 + 7 = 70.


Need a phase advance of 70 degrees from lead filter.

** The maximum phase advance of the lead compensator 

\[F_{lead}(s) = \frac{\alpha_d T_d s + 1}{\T_d s + 1}\]

\[ \phi = \max \arg F_{lead}(i\omega)\]

#+begin_export latex
\begin{center}
  \begin{tikzpicture}
  \end{tikzpicture}
\end{center}

#+end_export
