#+OPTIONS: toc:nil
# #+LaTeX_CLASS: koma-article 

#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation,aspectratio=169]
#+OPTIONS: H:2

#+LaTex_HEADER: \usepackage{khpreamble}
#+LaTex_HEADER: \usepackage{amssymb}
#+LaTex_HEADER: \DeclareMathOperator{\shift}{q}
#+LaTex_HEADER: \DeclareMathOperator{\diff}{p}
#+LaTex_HEADER: \usepackage{tcolorbox}


#+title: From continuous-time to discrete-time systems
# #+date: 2021-07-01

* What do I want the students to understand?			   :noexport:
  - How to sample cont-time system
  - The z-transform
  - Feedback in discrete-time systemsn

* Which activities will the students do?			   :noexport:
  1. Prove z-transform of a^k, using only definition and the identity
     \sum_{k=0}^\infty r^k = 1/(1-r), if |r| < 1
  2. Sample first-order system with zero
  3. Root locus of simple system

* Intro

** The computerized control system of the Apollo LM
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.3
:END:

    \begin{center}
     \includegraphics[width=1.0\linewidth]{../../figures/Hoag-report-1.png}
    \end{center}
*** Text
:PROPERTIES:
:BEAMER_col: 0.7
:END:

#+BEAMER: \pause

    \begin{center}
     \includegraphics[width=.7\linewidth]{../../figures/Hoag-report-2.png}
    \end{center}

#+BEAMER: \pause

    \begin{center}
     \includegraphics[width=.7\linewidth]{../../figures/Hoag-report-fig2.png}
    \end{center}

* Discrete-time system example

* Zero-order hold, or step-invariant sampling preview

** Discrete-time systems

 
** The world according to the discrete-time controller
\small 
#+BEGIN_CENTER 
    \includegraphics[width=0.6\linewidth]{../../figures/fig1-1-schematic.png}

    Source: Åström and Wittenmark "Computer-controlled systems".
   #+END_CENTER

#+BEAMER: \pause

The sampling leading to the /stroboscopic/ model can have some peculiar effects: https://youtu.be/yIUZ-qKWnXc
   
** Sampled systems are *not* invariant in continuous time          :noexport:
# \includegraphics[height=0.5\textheight]{../../figures/diskdrive.png}
\includegraphics[height=0.6\linewidth]{../../figures/fig1-9.png}

*** Notes                                                          :noexport:
    - La respuesta (el comportamiento) depende si el cambio escalón de la señal de referencia ocurre exactamente en un instante de muestreo, o si ocurre entre instantes de muestreo.
    - Si ocurre entre instantes de muestreo, entonces el sistema no va a detectar el cambio en la señal hasta el proxima instante de muestreo
    - Pero si el cambio ocurre en un instante de muestreo, el compartamiento no depende de en cual instante ocurrio. Este en inglés se llama /shift-invariant/

** Discrete-time Linear Shift-Invariant systems

   \begin{center}
   \begin{tikzpicture}[node distance=20mm, anchor=north]
   \node[coordinate] (input) {};
   \node[rectangle, draw, right of=input, inner sep=3mm] (lti) {g};
   \node[coordinate, right of=lti] (output) {};
   \draw[->] (input) -- node[near start, above] {$u(k)$}  (lti);
   \draw[->] (lti) -- node[near end, above] {$y(k)$} (output);
   \end{tikzpicture}
   \end{center}

#+BEAMER: \pause

*** General case (non-causal)
   \[ y(k) = g \ast u = \sum_{n=-\infty}^\infty g(n) u(k-n) \]

#+BEAMER: \pause

*** Causal case
   \[ y(k) = g \ast u = \sum_{n=0}^\infty g(n) u(k-n) \]


   $g(k)$ is called the *weighting sequence*.


** Discrete-time LSI systems
*** Impulse response

   \[ y(k) = g \ast u = \sum_{n=0}^\infty g(n) u(k-n) \]

If the input signal is a unit discrete impulse

\begin{center}
\begin{tikzpicture}
\begin{axis}[
  width=14cm,
  height=2.5cm,
  xlabel={$k$},
  ylabel={$u(k)$},
  xmin=-2.5,
  xmax=10.5,
]

\addplot+[black, ycomb, domain=-2:10, samples=13,variable=k] { (k==0)}; 

\end{axis}
\end{tikzpicture}
\end{center}


#+BEAMER: \pause

   \[ y(k) = \sum_{n=0}^\infty g(n) \delta(k-n) = g(k) \]

*The weighting sequence is equal to the impulse response of the system.*

** The response of a discrete LSI system is a weighted sum of the current and previous values of the input

\small

   \[ y(k) = g \ast u = \sum_{n=0}^\infty g(n) u(k-n) \]


   *Activity* What is the response of a system to the input signal \(u(k)\) if its impulse response (weighting sequence) is the one below, \( g(k) = \delta(k-4)\) ?

\begin{center}
\begin{tikzpicture}
\small
\begin{axis}[
  width=14cm,
  height=3.5cm,
  xlabel={$k$},
  ylabel={$g(k)$},
  xmin=-0.5,
  xmax=10.5,
  ytick = {0, 1},
]

\addplot+[black, ycomb, domain=-2:10, samples=13,variable=k] { (k==4)}; 

\end{axis}
\end{tikzpicture}
\end{center}

 \[y(k) = \]

 
*** Notes                                                          :noexport:

   \[ y(k) = g \ast u = \sum_{n=0}^\infty g(n) u(k-n) = \sum_{n=0}^\infty \delta(n-4) u(k-n)
   = u(k-4)\]  

   or y(k) = g(0)u(k) + g(1)u(k-1) + g(2)u(k-2) + ...  = u(k-4)
* The z-transform
** The z-transform

** The impulse modulation model of sampling
   The *impulse train*, a.k.a the *Dirac comb*:
   \( m(t) = \sum_{k=-\infty}^{\infty} \delta(t-kh) \)\hspace*{10mm}
   #+BEAMER: \pause
   \includegraphics[width=0.4\linewidth]{../../figures/modulation-model-blocks}

   #+BEAMER: \pause
   
        \[f_s(t) = f(t)m(t) = f(t) \sum_{k=-\infty}^{\infty} \delta(t-kh) = \sum_{k=-\infty}^{\infty} f(t)\delta(t-kh) = \sum_{k=-\infty}^{\infty} f(kh) \delta(t-kh) \]


#+BEGIN_CENTER 
 \includegraphics[width=0.8\linewidth]{../../figures/modulation-model-timeseries}
#+END_CENTER

*** Notes							   :noexport:
    The laplace transform of f_s(t):
    F_s(s) = \int_t (\sum_k f(t)\delta(t-kh)) exp(-st) dt
           = \sum_k f(kh) \int_t \delta(t-kh) exp(-st) dt
	   = \sum_k f(kh) exp(-skh) = \sum_k f(kh) exp(-sh)^k = \sum_k f(kh) z^-k, 
	   where z = exp(sh)
    The fourier transform is obtained by evaluating the laplace transform at s=i\omega (provided the imaginary axis is within the ROC). Go back a few steps
    F_s(i\omega) = \sum_k \int_t \delta(t-kh) f(t) exp(-i\omegat)
    Since  \delta(x-a) = 1/2pi \int exp(i(x-a)t)dt
    \delta(t-kh) = 1/2pi \int exp(i(t-kh)\tau) d\tau
    F_s(i\omega) = \sum_k \int_t \int_tau 1/(2pi) exp(i(t-kh)\tau) d\tau f(t)exp(-i\omega t) dt
                 = \sum_k \int_t \int_tau 1/(2pi) f(t) exp(i(t\tau -kh\tau-\omega t)) dtau dt
		 = \sum_k \int_tau  exp(-i kh\tau) 1/2pi \int_t f(t) exp(-i(\omega -tau) t) dt dtau
		 = \sum_k \int_tau exp(-i kh\tau) F(\omega-tau) dtau
		 = 2pi \sum_k 

    The Laplace transform of m(t) is also an impulse train
    \[ M(s) = \sum_{i=-\infty}^{\infty} \delta(s-i\omega_j), \]
    where \omega_j = j\frac{2\pi}{h} = j\omega_s. 
    So, since multiplication in time domain is convolution in the s-domain
    F_s(s) = F(s) \ast M(s) = \int_{x=-\infty}^{\infty} M(s) F(s-x)
           = \int_x \sum_j \delta(s-i\omega_j) F(s-x


** The Laplace transform
*** Definition 
    \[ F(s) = \laplace{f(t)} = \int_0^\infty f(t) \mathrm{e}^{-st} dt\]
*** Inverse transform
    \[ f(t) = \mathcal{L}^{-1}\{F(s)\} = \frac{1}{2\pi i} \int_{\gamma - i\infty}^{\gamma + i\infty} F(s)\mathrm{e}^{st} \, ds \]

Note that in control engineering, the one-sided transform is used.

** The z-transform
*** Definition
   \[ F(z) = \ztrf{f(kh)} = \sum_{k=0}^{\infty} f(kh)z^{-k} \]

*** Inverse transform
   \[ f(kh) = \frac{1}{2\pi i} \oint_r F(z) z^{k-1} \, dz \]

Note that in control engineering, the one-sided transform is used.

** The Laplace transform of a sampled signal
Assume right-sided signal \(f(t)\), meaning it is zero for negative times $t<0$.
\[f_s(t) = f(t)m(t) = f(t) \sum_{k=0}^{\infty} \delta(t-kh) = \sum_{k=0}^{\infty} f(t)\delta(t-kh) = \sum_{k=0}^{\infty} f(kh) \delta(t-kh) \]
   
   #+BEAMER: \pause

   \begin{align*}
   F_s(s) &= \laplace{f_s(t)} = \int_0^\infty \left(\sum_{k=0}^{\infty} f(kh) \delta(t-kh)\right)\mathrm{e}^{-st}\, dt \\
   &= \sum_{k=0}^{\infty} \int_0^\infty  f(kh) \delta(t-kh) \mathrm{e}^{-st}\, dt = \sum_{k=0}^{\infty} f(kh) \mathrm{e}^{-skh}\\
   &= \sum_{k=0}^{\infty} f(kh) \left(\mathrm{e}^{sh}\right)^{-k}
   \end{align*}

** The Laplace transform of a sampled signal

\small

Note:
   \begin{align*}
   F_s(s) &=  \sum_{k=0}^{\infty} f(kh) \left(\mathrm{e}^{sh}\right)^{-k}\quad \text{Laplace transform}\\
   F(z) &= \sum_{k=0}^{\infty} f(kh) z^{-k} \quad \text{z-transform}
   \end{align*}

*Activity* How is the Laplace transform of the sampled signal and the z-transform of the corresponding discrete-time sequence related?

   #+BEAMER: \pause

   \begin{tcolorbox}
    The z-transform of a sampled signal corresponds to its Laplace transform with the following relationship between the s-plane of the Laplace transform and the z-plane of the z-plane of the z-transform.
   \[ z = \mathrm{e}^{sh}\]
   \end{tcolorbox}


** One of the most important transform pairs
   \[f(kh) = \alpha^{kh}, \quad \alpha \in \mathbb{C}\]

   #+BEAMER: \pause
   
   \begin{align*}
      F(z) &= \ztrf{f(kh)} = \sum_{k=0}^{\infty} f(kh)z^{-k}
      =  \sum_{k=0}^{\infty} \alpha^{kh}z^{-k} =  \sum_{k=0}^{\infty} \left(\alpha^{h}\right)^kz^{-k}\\
      &=  \sum_{k=0}^{\infty} \left(\frac{\alpha^{h}}{z}\right)^{k}
      =  \frac{1}{1 - \frac{\alpha^h}{z}} = \frac{z}{z-\alpha^{h}}, \quad |\frac{\alpha^h}{z}| < 1
   \end{align*}

   #+BEAMER: \pause

   \begin{tcolorbox}
   \[ \alpha^{kh} \quad  \overset{\mathcal{Z}}{\longleftrightarrow} \quad \frac{z}{z-\alpha^h} \]
   \end{tcolorbox}

* Step-invariant sampling


** Step-invariant sampling (a.k.a ZOH sampling)

** Step-invariant sampling (a.k.a ZOH sampling)

#+BEGIN_CENTER 
 \includegraphics[width=0.9\linewidth]{../../figures/invariant-sampling-white.pdf}
#+END_CENTER

#+BEAMER: \pause
   Step-invariant sampling (zero order hold): \( u(kh) = \begin{cases} 1, & k \ge 0\\0, & k<0 \end{cases} \)
   
** Step-invariant sampling (a.k.a ZOH sampling)
   The idea is to sample the continuous-time system's response to a step input, in order to obtain a discrete approximation which is *exact* (at the sampling instants) for such an input signal. 

#+BEGIN_CENTER 
 \includegraphics[width=0.9\linewidth]{../../figures/invariant-sampling.pdf}
#+END_CENTER

   Step-invariant sampling (zero order hold): \( u(kh) = \begin{cases} 1, & k \ge 0\\0, & k<0 \end{cases} \)
   
** Why is step-invariant sampling a good idea?

   A piecewise constant (stair-case shaped) function can be written as a sum of delayed step-responses!
   #+begin_export latex
     \begin{center}
       \begin{tikzpicture}
         \small
         \begin{axis}[
           clip = false,
           width=7cm,
           height=2.5cm,
           yshift=1.5cm,
           xlabel={$t$},
           ylabel={},
           xmax=10.5,
           ]
           \addplot+[black, no marks] coordinates {(-1,0) (0,0) (0,1) (10,1) } node[pos=0.7,coordinate, pin=40:$u_H(t)$] {};
         \end{axis}
         \begin{axis}[
           clip=false,
           width=7cm,
           height=2.5cm,
           yshift=-1.5cm,
           xlabel={$t$},
           ylabel={},
           xmax=10.5,
           ]
           \addplot+[black, no marks] coordinates {(-1,0) (1,0) (1,2) (10,2) } node[pos=0.7,coordinate, pin=40:$2u_H(t-1)$] {};;
         \end{axis}
         \begin{axis}[
           clip=false,
           width=7cm,
           height=2.5cm,
           xshift=7.5cm,
           xlabel={$t$},
           ylabel={},
           xmax=10.5,
           ]
           \addplot+[black, no marks] coordinates {(-1,0) (0,0) (0,1) (1,1) (1,3) (10,3) }  node[pos=0.7,coordinate, pin=40:$u(t) + 2u_H(t-1)$] {};;
         \end{axis}

         \node at (2.2,0.2) {\huge  +};
         \node at (6.5,0.2) {\huge  =};

       \end{tikzpicture}
     \end{center}

   #+end_export


** Why is step-invariant sampling a good idea? (contd)             :noexport:
   Due to the system being LTI (linear time-invariant), the output to a sum of delayed step functions, is the same sum of delayed step-responses.

#+begin_export latex

        \begin{center}
          \begin{tikzpicture}[node distance=20mm, block/.style={rectangle, draw, minimum width=15mm, }]

            \node[coordinate] (input) {};
            \node[block, right of=input, node distance=22mm] (lti) {LTI};
            \node[coordinate, right of=lti, node distance=22mm] (output) {};

            \draw[->] (input) -- node[above, near start] {$u_H(t)$} (lti);
            \draw[->] (lti) -- node[above, near end] {$y_H(t)$} (output);
          \end{tikzpicture}
        \end{center}
#+end_export

   Hence, $u(t) = \sum_{i} \alpha_i u_H(t-\tau_i)$ has the response \(y(t)=\). 

** Why is step-invariant sampling a good idea? (contd)             :noexport:
   Due to the system being LTI (linear time-invariant), the output to a sum of delayed step functions, is the same sum of delayed step-responses.

#+begin_export latex

        \begin{center}
          \begin{tikzpicture}[node distance=20mm, block/.style={rectangle, draw, minimum width=15mm, }]

            \node[coordinate] (input) {};
            \node[block, right of=input, node distance=22mm] (lti) {LTI};
            \node[coordinate, right of=lti, node distance=22mm] (output) {};

            \draw[->] (input) -- node[above, near start] {$u_H(t)$} (lti);
            \draw[->] (lti) -- node[above, near end] {$y_H(t)$} (output);
          \end{tikzpicture}
        \end{center}
#+end_export
   Hence, $u(t) = \sum_{i} \alpha_i u_H(t-\tau_i)$ has the response $y(t) = \sum_i \alpha_i y_H(t-\tau_i)$. 

   *If the sampling method is exact for step input signals, it will also be exact for piecwise-constant step input signals, and this is exactly what the ZOH-block produces!*


* Zero-order hold sampling procedure
** Impulse- step- and ramp-invariant sampling                      :noexport:

#+BEGIN_CENTER 
 \includegraphics[width=0.9\linewidth]{../../figures/invariant-sampling.pdf}
#+END_CENTER

   - Impulse-invariant sampling: \( u(t) = \delta(t)\)
   - Step-invariant sampling (zero order hold): \( u(t) = \begin{cases} 1, & t \ge 0\\0, & t<0 \end{cases} \)
   - Ramp-invariant sampling: \( u(t) = \begin{cases} t, & t \ge 0\\0, & t<0 \end{cases} \)

** Step-invariant sampling, or zero-order-hold sampling
   Let the input to the continuous-time system be a unit step \(u(t)=u_H(t),\) which has Laplace transform \(U(s)=\frac{1}{s}.\) In the Laplace-domain we get
   \[Y(s) = G(s)\frac{1}{s}\]
   1. Obtain the time-response by inverse Laplace: \(y(t)=\laplaceinv{Y(s)}\)
   2. Sample the time-response to obtain the sequence \(y(kh)\) and apply  the z-transform to obtain \(Y(z) = \ztrf{y(kh)}\)
   3. Calculate the pulse-transfer function by dividing with the z-transform of the input signal \(U(z) = \frac{z}{z-1}. \) \[H(z) = \frac{Y(z)}{U(z)} = \frac{z-1}{z}Y(z) \]

* Zero-order hold sampling example
** Example: First-order system

# \footnotesize
\small

\[ G(s) = \frac{1}{\tau s + 1}. \]

   #+BEAMER: \pause
   1. Step response: \(y(t) = \big(1 - \mathrm{e}^{-\frac{t}{\tau}}\big)u_H(t)\)
   #+BEAMER: \pause
   2. [@2] Sampling and applying the z-transform:
      \[ y(kh) = \big(1 - \mathrm{e}^{-\frac{kh}{\tau}}\big)u_H(kh) = u_H(kh) - \big(\mathrm{e}^{-\frac{h}{\tau}}\big)^k u_H(kh) \]
   #+BEAMER: \pause
      \begin{align*} Y(z) &= \frac{z}{z-1} - \frac{z}{z-\mathrm{e}^{-\frac{h}{\tau}}} = \frac{z\big(z-\mathrm{e}^{-\frac{h}{\tau}} - (z-1)\big)}{(z-1)(z-\mathrm{e}^{-\frac{h}{\tau}})}
      = \frac{z(1-\mathrm{e}^{-\frac{h}{\tau}})}{(z-1)(z-\mathrm{e}^{-\frac{h}{\tau}})}
      \end{align*}
   #+BEAMER: \pause
    3. [@3] Calculate the pulse-transfer function
       \[H(z) = \frac{Y(z)}{U(z)} = \frac{z-1}{z} \cdot \frac{z(1-\mathrm{e}^{-\frac{h}{\tau}})}{(z-1)(z-\mathrm{e}^{-\frac{h}{\tau}})} = \frac{1-\mathrm{e}^{-\frac{h}{\tau}}}{z-\mathrm{e}^{-\frac{h}{\tau}}} \]
   

